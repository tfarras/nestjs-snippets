{
  "Nest Crud Controller": {
    "scope": "typescript",
    "prefix": "n-crud-con",
    "body": [
      "import { Controller, Get, Param, Put, Body, Post, Delete } from '@nestjs/common';",
      "import {${1:Name}Entity} from './${2:name}.entity';",
      "",
      "@Controller('${2:name}')",
      "export class ${1:Name}Controller {",
      "\t@Get()",
      "\tgetMany(): Promise<${1:Name}Entity[]> {",
      "\t\treturn ${1:Name}Entity.find();",
      "\t}",
      "",
      "\t@Get(':id')",
      "\tgetOne(@Param('id') id: number): Promise<${1:Name}Entity> {",
      "\t\treturn ${1:Name}Entity.findOne(id);",
      "\t}",
      "",
      "\t@Post()",
      "\tcreateOne(@Body() dto: ${1:Name}Entity): Promise<${1:Name}Entity> {",
      "\t\treturn ${1:Name}Entity.save(dto);",
      "\t}",
      "",
      "\t@Put(':id')",
      "\tupdateOne(",
      "\t\t@Param('id') id: number,",
      "\t\t@Body() dto: ${1:Name}Entity,",
      "\t) {",
      "\t\tdto.id = id;",
      "",
      "\t\treturn ${1:Name}Entity.save(dto);",
      "\t}",
      "",
      "\t@Delete(':id')",
      "\tasync deleteOne(",
      "\t\t@Param('id') id: number,",
      "\t): Promise<${1:Name}Entity> {",
      "\t\tconst dto = await ${1:Name}Entity.findOne(id);",
      "",
      "\t\treturn ${1:Name}Entity.remove(dto);",
      "\t}",
      "}",
      ""
    ]
  },
  "Nest Put Request": {
    "scope": "typescript",
    "prefix": "n-put",
    "body": [
      "",
      "@Put(':id')",
      "updateOne(",
      "\t@Param('id') id: number,",
      "\t@Body() dto: ${1:Name}Entity,",
      ") {",
      "\tdto.id = id;",
      "",
      "\treturn ${1:Name}Entity.save(dto);",
      "}",
      ""
    ]
  },
  "Nest Get Many Request": {
    "scope": "typescript",
    "prefix": "n-get-many",
    "body": [
      "@Get()",
      "getMany(): Promise<${1:Name}Entity[]> {",
      "\treturn ${1:Name}Entity.find();",
      "}",
      ""
    ]
  },
  "Nest Get One Request": {
    "scope": "typescript",
    "prefix": "n-get",
    "body": [
      "@Get(':id')",
      "getOne(@Param('id') id: number): Promise<${1:Name}Entity> {",
      "\treturn ${1:Name}Entity.findOne(id);",
      "}",
      ""
    ]
  },
  "Nest Post Request": {
    "scope": "typescript",
    "prefix": "n-post",
    "body": [
      "@Post()",
      "createOne(@Body() dto: ${1:Name}Entity): Promise<${1:Name}Entity> {",
      "\treturn ${1:Name}Entity.save(dto);",
      "}",
      ""
    ]
  },
  "Nest Delete Request": {
    "scope": "typescript",
    "prefix": "n-delete",
    "body": [
      "@Delete(':id')",
      "async deleteOne(",
      "\t@Param('id') id: number,",
      "): Promise<${1:Name}Entity> {",
      "\tconst dto = await ${1:Name}Entity.findOne(id);",
      "",
      "\treturn ${1:Name}Entity.remove(dto);",
      "}",
      ""
    ]
  },
  "Nest TypeORM Module": {
    "scope": "typescript",
    "prefix": "n-type-module",
    "body": [
      "import { Module } from '@nestjs/common';",
      "import { TypeOrmModule } from '@nestjs/typeorm';",
      "import { ${1:Name}Controller } from './${2:Name}.controller';",
      "import { ${1:Name}Service } from './${2:Name}.service';",
      "import { ${1:Name}Entity } from './${2:Name}.entity';",
      "",
      "@Module({",
      "\timports: [",
      "\t\tTypeOrmModule.forFeature([${1:Name}Entity]),",
      "\t],",
      "\tcontrollers: [${1:Name}Controller],",
      "\tproviders: [${1:Name}Service],",
      "})",
      "export class ${1:Name}Module { }",
      ""
    ]
  },
  "Nest TypeORM Entity": {
    "scope": "typescript",
    "prefix": "n-type-entity",
    "body": [
      "import { Entity, PrimaryGeneratedColumn, BaseEntity } from 'typeorm';",
      "",
      "@Entity({ name: '${1:table_name}' })",
      "export class ${2:Name}Entity extends BaseEntity {",
      "\t@PrimaryGeneratedColumn()",
      "\tid: number;",
      "",
      "\t${0}",
      "}",
      ""
    ]
  }
}